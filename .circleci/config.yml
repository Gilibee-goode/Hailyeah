version: 2.1

jobs:
  build-and-push:
    docker:
      - image: cimg/base:2022.09  # Base image for the job
    steps:
      - checkout  # Step to checkout the code from the repository
      - setup_remote_docker  # Sets up a Docker environment linked to this job
      - run:  # Step to build the Docker image
          name: Build Docker Image
          command: |
            docker build -t $DOCKERHUB_USERNAME/hailyeah:circle-${CIRCLE_BUILD_NUM} .
      - run:  # Step to log in to DockerHub and push the image
          name: Publish Docker Image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/hailyeah:circle-${CIRCLE_BUILD_NUM}

  checkov-terraform:
      docker:
        - image: cimg/base:2022.09
      steps:
        - checkout
        - run:
            name: Install Checkov
            command: |
              pip install checkov
        - run:
            name: Run Checkov Terraform Scan
            command: |
              checkov -d ./Terraform  # Scans all Terraform files in the current directory

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-and-push
      - checkov-terraform:
                requires:
                  - build-and-push  # Ensures this job runs only after the build-and-push job

# version: 2.1
# # orbs:
# #   python: circleci/python@2
# jobs:
#   test-python:
#     # Install dependencies and run tests
#     docker:
#       - image: cimg/python:3.8-node
#     steps:
#       - checkout
#       - python/install-packages
#       - run:
#           name: Run tests
#           command: pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
#       - store_test_results:
#           path: junit.xml
#   deploy:
#     # This is an example deploy job, not actually used by the workflow
#     docker:
#       - image: cimg/base:stable
#     steps:
#       # Replace this with steps to deploy to users
#       - run:
#           name: deploy
#           command: '#e.g. ./deploy.sh'
#       - run:
#           name: found github actions config
#           command: ':'
#       - run:
#           name: found jenkins config
#           command: ':'
# workflows:
#   build-and-test:
#     jobs:
#       - test-python
#     # - deploy:
#     #     requires:
#     #       - test-python