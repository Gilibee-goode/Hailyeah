version: 2.1

jobs:
  build-and-push:
    docker:
      - image: cimg/python:3.12.3  # Base image for the job
    steps:
      - checkout  # Step to checkout the code from the repository
      - setup_remote_docker:
          docker_layer_caching: true  # Sets up a Docker environment linked to this job
      - run:  # Step to build the Docker image
          name: Build Docker Image
          command: |
            docker build -t ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:circle-${CIRCLE_BUILD_NUM} .
      - run:
          name: Test
          command: |
            docker run --rm -d -p 8000:80 --name app-test ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:circle-${CIRCLE_BUILD_NUM}
            python3 -m pip install requests
            python3 Python/test_reachable.py
            docker kill app-test
      - run:  # Step to log in to DockerHub and push the image
          name: Publish Docker Image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/${IMAGE_NAME}:circle-${CIRCLE_BUILD_NUM}

  test-checkov:
      docker:
        - image: cimg/python:3.12.3
      steps:
        - checkout
        - run:
            name: Install Checkov
            command: |
              pip install checkov
        - run:
            name: Run Checkov Terraform Scan
            command: |
              checkov -d ./Terraform  # Scans all Terraform files in the current directory

  test-terratest:
      docker:
        - image: cimg/go:1.22.2
      steps:
        - checkout
        - run:
            name: Setup Terratest
            command: |
              cd Terraform/test
              go mod init tf_test.go
              go mod tidy
        - run:
            name: Run Terratest
            command: |
              cd Terraform/test
              go test -v -timeout 30m

  run-terraform:
      docker:
        - image: cimg/aws:2024.03
      steps:
        - checkout
        - run:
            name: Setup Terraform
            command: |
              echo "yolo"
        # - run:
        #     name: Run Terratest
        #     command: |
        #       cd Terraform/test
        #       go test -v -timeout 30m


workflows:
  version: 2
  Hailyeah-build-test-deploy:
    jobs:
      - build-and-push
      - test-checkov:
                requires:
                  - build-and-push  # Ensures this job runs only after the build-and-push job
      - test-terratest:
                requires:
                  - test-checkov
      - run-terraform:
                requires:
                  - test-terratest

                

# version: 2.1
# # orbs:
# #   python: circleci/python@2
# jobs:
#   test-python:
#     # Install dependencies and run tests
#     docker:
#       - image: cimg/python:3.8-node
#     steps:
#       - checkout
#       - python/install-packages
#       - run:
#           name: Run tests
#           command: pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
#       - store_test_results:
#           path: junit.xml
#   deploy:
#     # This is an example deploy job, not actually used by the workflow
#     docker:
#       - image: cimg/base:stable
#     steps:
#       # Replace this with steps to deploy to users
#       - run:
#           name: deploy
#           command: '#e.g. ./deploy.sh'
#       - run:
#           name: found github actions config
#           command: ':'
#       - run:
#           name: found jenkins config
#           command: ':'
# workflows:
#   build-and-test:
#     jobs:
#       - test-python
#     # - deploy:
#     #     requires:
#     #       - test-python